## User
VM_USER=$(logname)

## IOMMU groups
IOMMU_GPU=
IOMMU_GPU_AUDIO=
IOMMU_PCI_AUDIO=

## For extracting the VBIOS
VBIOS_EXTRACT_PATH=/root/VBIOS.rom
NVFLASH=/root/nvflash_linux
extract_videobusid="0000:$IOMMU_GPU"

## Virsh devices
VIRSH_GPU=
VIRSH_GPU_AUDIO=
VIRSH_PCI_AUDIO=

## PCI BUS ID
videoid=
audioid=
videobusid="0000:$IOMMU_GPU"
audiobusid="0000:$IOMMU_GPU_AUDIO"
pciaudioid=
pciaudiobusid=

## QEMU options
RAM=
CORES=
MACOS_RAM=4G
MACOS_CORES=4

## Hugepages
HUGEPAGES=

## Display manager
DSPMGR=

eventif01=
eventkbd=
eventmouse=

## USB DEVICE(s) ID(s)
usb1_vendorid=0x
usb1_productid=0x

## Network
TAP_INTERFACE=tap0
TAP_IP="10.10.10.1/24"
DNSMASQ_CONF="${BASH_SOURCE%/*}/dnsmasq.conf"
SMB_CONF="${BASH_SOURCE%/*}/smb.conf"

## Log file
LOG=

## Local path for storage
IMAGES=

## VBIOS
VBIOS=$IMAGES/VBIOS.rom

## Windows
VIRTIO=$IMAGES/iso/virtio-win.iso
OVMF=/usr/share/ovmf/x64/OVMF_CODE.fd
OVMF_VARS=/usr/share/ovmf/x64/OVMF_VARS.fd

## MacOS
MACOS_ISO=$IMAGES/iso/mojave.iso
MACOS_IMG=$IMAGES/mojave.qcow2
MACOS_CLOVER=$IMAGES/clover.qcow2
MACOS_OVMF=$IMAGES/MACOS_OVMF_CODE.fd
MACOS_OVMF_VARS=$IMAGES/MACOS_OVMF_VARS.fd
MACOS_OPTIONS="+pcid,+ssse3,+sse4.2,+popcnt,+aes,+xsave,+avx,+xsaveopt,avx2,+smep,check"

## Ulimit
ULIMIT=$(ulimit -a | grep "max locked memory" | awk '{print $6}')
ULIMIT_TARGET=$(( $(echo $RAM | tr -d 'G')*1048576+100000 ))

## CREATED MACHINES
